typedef percent {
	type uint16 {
		range "0 .. 100";
	}
	description "percentage";
}

leaf completed {
	type percent;
}




//Integer


typedef my-base-int32-type {
	type int32 {
		range "1..4 | 10..20";
	}
}

typedef derived-int32 {
	type my-base-int32-type {
		range "11..max";     //11.20
	}
}



//strings


typedef my-base-str-type {
	type string{
		length "1..255";
	}
}

typedef derived-str {
	type my-base-str-type {
		length "11 | 42..max";
		pattern "[0-9a-fA-F]*"
	}

}

//union statement

typedef threshold {
	description "Threshold value in percent";
	type union {
		type uint16 {
			range "0..100";
		}
		type enumeration {
			enum disabled {
				description "No threshold";
			}
		}
	}
}